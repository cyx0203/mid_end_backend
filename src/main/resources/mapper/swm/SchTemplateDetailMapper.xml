<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="schtemplatedetail">
  <resultMap id="BaseResultMap" type="map">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="temp_id" jdbcType="INTEGER" property="tempId" />
    <result column="week" jdbcType="CHAR" property="week" />
    <result column="noon" jdbcType="CHAR" property="noon" />
    <result column="dept_id" jdbcType="VARCHAR" property="deptId" />
    <result column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, temp_id, week, noon, dept_id, job_id, create_user, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sch_template_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from sch_template_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="map">
    insert into sch_template_detail (id, temp_id, week, 
      noon, dept_id, job_id, create_user, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{tempId,jdbcType=INTEGER}, #{week,jdbcType=CHAR}, 
      #{noon,jdbcType=CHAR}, #{deptId,jdbcType=VARCHAR}, #{jobId,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into sch_template_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tempId != null">
        temp_id,
      </if>
      <if test="week != null">
        week,
      </if>
      <if test="noon != null">
        noon,
      </if>
      <if test="deptId != null">
        dept_id,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="tempId != null">
        #{tempId,jdbcType=INTEGER},
      </if>
      <if test="week != null">
        #{week,jdbcType=CHAR},
      </if>
      <if test="noon != null">
        #{noon,jdbcType=CHAR},
      </if>
      <if test="deptId != null">
        #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update sch_template_detail
    <set>
      <if test="tempId != null">
        temp_id = #{tempId,jdbcType=INTEGER},
      </if>
      <if test="week != null">
        week = #{week,jdbcType=CHAR},
      </if>
      <if test="noon != null">
        noon = #{noon,jdbcType=CHAR},
      </if>
      <if test="deptId != null">
        dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="map">
    update sch_template_detail
    set temp_id = #{tempId,jdbcType=INTEGER},
      week = #{week,jdbcType=CHAR},
      noon = #{noon,jdbcType=CHAR},
      dept_id = #{deptId,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
